name: Test Nabla Runner

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'crates/runner/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'crates/runner/**'
      - '.github/workflows/test.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: Test Rust Components
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      working-directory: crates/runner
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      working-directory: crates/runner
    
    - name: Run unit tests
      run: cargo test --lib
      working-directory: crates/runner
    
    - name: Run integration tests
      run: cargo test --test unit_tests
      working-directory: crates/runner

  test-python:
    name: Test Python Components
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pytest
      working-directory: crates/runner
    
    - name: Run Python tests
      run: python -m pytest tests/test_server.py -v
      working-directory: crates/runner

  test-docker:
    name: Test Docker Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        cd crates/runner
        docker build -t nabla-runner-test .
    
    - name: Test Docker image
      run: |
        # Test that the image contains the expected binaries
        docker run --rm nabla-runner-test which python3
        docker run --rm nabla-runner-test which nabla-runner
        docker run --rm nabla-runner-test cargo --version
        docker run --rm nabla-runner-test make --version

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-rust, test-python]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask requests
        # Install build tools for integration tests
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
      working-directory: crates/runner
    
    - name: Build Rust binary
      run: cargo build --bin nabla-runner
      working-directory: crates/runner
    
    - name: Run integration tests
      run: cargo test --test integration_tests
      working-directory: crates/runner
      env:
        # Skip tests that require network access in CI
        SKIP_NETWORK_TESTS: "true"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
      working-directory: crates/runner